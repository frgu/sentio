/*! sentio Version: 0.7.7 */
angular.module("sentio",[]),angular.module("sentio.realtime",[]),angular.module("sentio").directive("sentioScatterLineChart",["$document","$window","$timeout","$log",function($document,$window,$timeout,$log){"use strict";return{restrict:"A",scope:{model:"=sentioModel",resizeWidth:"@sentioResizeWidth",resizeHeight:"@sentioResizeHeight",lineGrouping:"=sentioLineGrouping",lineMethod:"=sentioLineMethod",showLegend:"=sentioShowLegend"},replace:!1,link:function(scope,element,attrs,controller){var chartElement=d3.select(element[0]),chart=sentio.chart.scatterLine(),width=element[0].style.width;null!=width&&""!==width&&(width=parseFloat(width.substring(0,width.length-2)),null==width||isNaN(width)||chart.width(width));var height=element[0].style.height;null!=height&&""!==height&&(height=parseFloat(height.substring(0,height.length-2)),null==height||isNaN(height)||chart.height(height)),chart.init(chartElement),scope.$watchCollection("model",function(n,o){null==o&&null==n||(chart.axes(n[0]),chart.groups(n[1]),chart.data(n[2]),redraw())}),scope.$watch("lineGrouping",function(n,o){null==o&&null==n||(chart.lineGrouping(n),redraw())}),scope.$watch("lineMethod",function(n,o){null==o&&null==n||(chart.lineMethod(n),redraw())}),scope.$watch("showLegend",function(n,o){null==o&&null==n||(chart.showLegend(n),redraw())});var resizeTimer,redrawTimer,resizeWidth=null!=attrs.sentioResizeWidth,resizeHeight=null!=attrs.sentioResizeHeight,window=angular.element($window),redraw=function(){null!=redrawTimer&&$timeout.cancel(redrawTimer),redrawTimer=$timeout(function(){chart.redraw()},0)},doResize=function(){var body=$document[0].body,overflow=body.style.overflow;body.style.overflow="hidden";var rawElement=element[0],parentWidth=rawElement.attributes.width|rawElement.style.width|rawElement.clientWidth,parentHeight=rawElement.attributes.height|rawElement.style.height|rawElement.clientHeight,width=resizeWidth?parentWidth-attrs.sentioResizeWidth:void 0,height=resizeHeight?parentHeight-attrs.sentioResizeHeight:void 0;body.style.overflow=overflow,resizeWidth&&chart.width(width),resizeHeight&&chart.height(height),chart.resize(),redraw()},delayResize=function(){void 0!==resizeTimer&&$timeout.cancel(resizeTimer),resizeTimer=$timeout(doResize,200)};resizeWidth&&(window.on("resize",delayResize),delayResize()),scope.$on("$destroy",function(){window.off("resize",delayResize)})}}}]),angular.module("sentio").directive("sentioChordDiagram",["$document","$window","$timeout","$log",function($document,$window,$timeout,$log){"use strict";return{restrict:"A",scope:{model:"=sentioModel",resizeWidth:"@sentioResizeWidth",resizeHeight:"@sentioResizeHeight"},replace:!1,link:function(scope,element,attrs,controller){var chordElement=d3.select(element[0]),chord=sentio.chord.basic(),width=element[0].style.width;null!=width&&""!==width&&(width=parseFloat(width.substring(0,width.length-2)),null==width||isNaN(width)||(chord.width(width),chord.height(width))),chord.init(chordElement),scope.$watch("model",function(n,o){null==o&&null==n||(chord.data(n),redraw())});var resizeTimer,redrawTimer,resizeWidth=null!=attrs.sentioResizeWidth,resizeHeight=null!=attrs.sentioResizeHeight,window=angular.element($window),redraw=function(){null!=redrawTimer&&$timeout.cancel(redrawTimer),redrawTimer=$timeout(function(){chord.redraw()},0)},doResize=function(){var body=$document[0].body,overflow=body.style.overflow;body.style.overflow="hidden";var rawElement=element[0],parentWidth=rawElement.attributes.width|rawElement.style.width|rawElement.clientWidth,width=resizeWidth?parentWidth-attrs.sentioResizeWidth:void 0,height=width;body.style.overflow=overflow;var oldHeight=chord.height(),oldWidth=chord.width();height!==oldHeight||width!==oldWidth?($log.debug("resize donut.chart width: "+width),$log.debug("resize donut.chart height: "+height),resizeHeight&&chord.height(height),resizeWidth&&chord.width(width),chord.resize(),redraw()):($log.debug("resize donut.chart width unchanged: "+width),$log.debug("resize donut.chart height unchanged: "+height))},delayResize=function(){void 0!==resizeTimer&&$timeout.cancel(resizeTimer),resizeTimer=$timeout(doResize,0)};resizeWidth&&(window.on("resize",delayResize),delayResize()),scope.$on("$destroy",function(){window.off("resize",delayResize)})}}}]),angular.module("sentio").directive("sentioDonutChart",["$document","$window","$timeout","$log",function($document,$window,$timeout,$log){"use strict";return{restrict:"A",scope:{model:"=sentioModel",duration:"=sentioDuration",color:"=sentioColor",api:"=sentioApi",resizeWidth:"@sentioResizeWidth",resizeHeight:"@sentioResizeHeight",configureFn:"&sentioConfigureFn"},replace:!1,link:function(scope,element,attrs,controller){var chartElement=d3.select(element[0]),chart=sentio.chart.donut(),width=element[0].style.width;null!=width&&""!==width&&(width=parseFloat(width.substring(0,width.length-2)),null==width||isNaN(width)||(chart.width(width),chart.height(width))),chart.init(chartElement),scope.$watchCollection("model",function(n,o){null==o&&null==n||(chart.data(n),redraw())}),scope.$watch("configureFn",function(n,o){null!=scope.configureFn&&scope.configureFn({chart:chart})}),scope.$watch("duration",function(n,o){null==o&&null==n||chart.duration(n)}),scope.$watch("colorScale",function(n,o){null==o&&null==n||chart.duration(n)},!0),scope.$watch("api",function(n,o){null!=scope.api&&(scope.api.redraw=chart.redraw,scope.api.resize=doResize)});var resizeTimer,redrawTimer,resizeWidth=null!=attrs.sentioResizeWidth,resizeHeight=null!=attrs.sentioResizeHeight,window=angular.element($window),redraw=function(){null!=redrawTimer&&$timeout.cancel(redrawTimer),redrawTimer=$timeout(function(){chart.redraw()},0)},doResize=function(){var body=$document[0].body,overflow=body.style.overflow;body.style.overflow="hidden";var rawElement=element[0],parentWidth=rawElement.attributes.width|rawElement.style.width|rawElement.clientWidth,width=resizeWidth?parentWidth-attrs.sentioResizeWidth:void 0,height=width;body.style.overflow=overflow;var oldHeight=chart.height(),oldWidth=chart.width();height!==oldHeight||width!==oldWidth?($log.debug("resize donut.chart width: "+width),$log.debug("resize donut.chart height: "+height),resizeHeight&&chart.height(height),resizeWidth&&chart.width(width),chart.resize(),redraw()):($log.debug("resize donut.chart width unchanged: "+width),$log.debug("resize donut.chart height unchanged: "+height))},delayResize=function(){void 0!==resizeTimer&&$timeout.cancel(resizeTimer),resizeTimer=$timeout(doResize,0)};resizeWidth&&(window.on("resize",delayResize),delayResize()),scope.$on("$destroy",function(){window.off("resize",delayResize)})}}}]),angular.module("sentio").directive("sentioLine",["$document","$window","$timeout","$log",function($document,$window,$timeout,$log){"use strict";return{restrict:"A",scope:{model:"=sentioModel",markers:"=sentioMarkers",yExtent:"=sentioYExtent",xExtent:"=sentioXExtent",duration:"=sentioDuration",api:"=sentioApi",resizeWidth:"@sentioResizeWidth",resizeHeight:"@sentioResizeHeight",configureFn:"&sentioConfigureFn",filterFn:"&sentioFilterFn",filterState:"=sentioFilterState",interpolation:"@sentioInterpolation",pointHoverFn:"&sentioPointHoverFn",legendFn:"&sentioLegendFn",yLock:"=sentioYLock",stacked:"=sentioStacked"},replace:!1,link:function(scope,element,attrs,controller){var lineElement=d3.select(element[0]),line=sentio.line.line(),width=element[0].style.width;null!=width&&""!==width&&(width=parseFloat(width.substring(0,width.length-2)),null==width||isNaN(width)||line.width(width));var height=element[0].style.height;null!=height&&""!==height&&(height=parseFloat(height.substring(0,height.length-2)),null==height||isNaN(height)||line.height(height)),(null!=attrs.sentioFilterFn||attrs.sentioFilterState)&&line.filter(!0);var lastFilterState=null;scope.$watch("filterFn",function(n,o){line.filter().on("filterend",function(filterState){$timeout(function(){scope.filterFn({filterState:filterState}),scope.filterState=filterState,lastFilterState=filterState})})}),scope.$watch("filterState",function(n,o){if(null!=n&&n!==lastFilterState){if(n.length>2){if(n[0])return;n=n.slice(1,3)}line.setFilter(n)}}),line.init(lineElement),line.interpolation(scope.interpolation),scope.$on("legend-toggle",function(evt,param){line.toggleSeries(param)}),scope.$watch("stacked",function(n,o){line.stacked(n)}),scope.$watch("yLock",function(n,o){line.yLock(n)}),scope.$watch("configureFn",function(n,o){null!=scope.configureFn&&scope.configureFn({line:line})}),scope.$watch("pointHoverFn",function(n,o){null!=scope.pointHoverFn&&line.pointHover(scope.pointHoverFn)}),scope.$watch("legendFn",function(n,o){null!=scope.legendFn&&line.legendFn(scope.legendFn)}),scope.$watchCollection("model",function(n,o){null==o&&null==n||(line.data(n),line.resize(),redraw())}),scope.$watchCollection("markers",function(n,o){null==o&&null==n||(line.markers(n),redraw())}),scope.$watchCollection("yExtent",function(n,o){null==o&&null==n||(line.yExtent().overrideValue(n),redraw())}),scope.$watchCollection("xExtent",function(n,o){null==o&&null==n||(line.xExtent().overrideValue(n),redraw())}),scope.$watch("duration",function(n,o){null==o&&null==n||line.duration(n)},!0),scope.$watch("api",function(n,o){null!=scope.api&&(scope.api.start=line.start,scope.api.stop=line.stop,scope.api.restart=line.restart,scope.api.redraw=line.redraw,scope.api.resize=doResize)});var resizeTimer,redrawTimer,resizeWidth=null!=attrs.sentioResizeWidth,resizeHeight=null!=attrs.sentioResizeHeight,window=angular.element($window),redraw=function(){null!=redrawTimer&&$timeout.cancel(redrawTimer),redrawTimer=$timeout(function(){line.redraw()},0)},doResize=function(){var body=$document[0].body,overflow=body.style.overflow;body.style.overflow="hidden";var rawElement=element[0],parentWidth=rawElement.attributes.width|rawElement.style.width|rawElement.clientWidth,parentHeight=rawElement.attributes.height|rawElement.style.height|rawElement.clientHeight,width=resizeWidth?parentWidth-attrs.sentioResizeWidth:void 0,height=resizeHeight?parentHeight-attrs.sentioResizeHeight:void 0;body.style.overflow=overflow,$log.debug("resize rt.line height: "+height+" width: "+width),resizeWidth&&line.width(width),resizeHeight&&line.height(height),line.resize(),redraw()},delayResize=function(){void 0!==resizeTimer&&$timeout.cancel(resizeTimer),resizeTimer=$timeout(doResize,200)};(resizeWidth||resizeHeight)&&(window.on("resize",delayResize),delayResize()),scope.$on("$destroy",function(){window.off("resize",delayResize)})}}}]),angular.module("sentio").directive("sentioMatrixChart",["$document","$window","$timeout","$log",function($document,$window,$timeout,$log){"use strict";return{restrict:"A",scope:{model:"=sentioModel",configureFn:"&sentioConfigureFn"},replace:!1,link:function(scope,element,attrs,controller){var chartElement=d3.select(element[0]),chart=sentio.chart.matrix();chart.init(chartElement),scope.$watch("configureFn",function(n,o){null!=scope.configureFn&&scope.configureFn({chart:chart})}),scope.$watchCollection("model",function(n,o){null==o&&null==n||(chart.data(n),redraw())});var redrawTimer,redraw=function(){null!=redrawTimer&&$timeout.cancel(redrawTimer),redrawTimer=$timeout(function(){chart.redraw()},0)};scope.$on("$destroy",function(){null!=redrawTimer&&$timeout.cancel(redrawTimer)})}}}]),angular.module("sentio.realtime").directive("sentioRtTimeline",["$document","$window","$timeout","$log",function($document,$window,$timeout,$log){"use strict";return{restrict:"A",scope:{model:"=sentioModel",markers:"=sentioMarkers",markerHover:"=sentioMarkerHover",interval:"=sentioInterval",delay:"=sentioDelay",yExtent:"=sentioYExtent",fps:"=sentioFps",api:"=sentioApi",resizeWidth:"@sentioResizeWidth",resizeHeight:"@sentioResizeHeight",configure:"&sentioConfigureFn"},replace:!1,link:function(scope,element,attrs,controller){var timelineElement=d3.select(element[0]),timeline=sentio.realtime.timeline(),width=element[0].style.width;null!=width&&""!==width&&(width=parseFloat(width.substring(0,width.length-2)),null==width||isNaN(width)||timeline.width(width));var height=element[0].style.height;null!=height&&""!==height&&(height=parseFloat(height.substring(0,height.length-2)),null==height||isNaN(height)||timeline.height(height)),timeline.init(timelineElement).data([]).start(),null!=scope.markerHover&&timeline.markerHover(scope.markerHover),scope.$watch("configure",function(n,o){null!=scope.configure&&(scope.configure({timeline:timeline}),timeline.redraw())}),scope.$watch("model",function(n,o){null==o&&null==n||timeline.data(n).redraw()}),scope.$watch("markers",function(n,o){null==o&&null==n||timeline.markers(n).redraw()}),scope.$watch("interval",function(n,o){null==o&&null==n||timeline.interval(n).redraw()}),scope.$watch("delay",function(n,o){null==o&&null==n||timeline.delay(n).redraw()}),scope.$watchCollection("yExtent",function(n,o){null==o&&null==n||(timeline.yExtent().overrideValue(n),timeline.redraw())}),scope.$watch("fps",function(n,o){null==o&&null==n||timeline.fps(n).redraw()}),scope.$watch("api",function(n,o){null!=scope.api&&(scope.api.start=timeline.start,scope.api.stop=timeline.stop,scope.api.restart=timeline.restart,scope.api.redraw=timeline.redraw,scope.api.resize=doResize)});var resizeTimer,resizeWidth=null!=attrs.sentioResizeWidth,resizeHeight=null!=attrs.sentioResizeHeight,window=angular.element($window),doResize=function(){var body=$document[0].body,overflow=body.style.overflow;body.style.overflow="hidden";var rawElement=element[0],parentWidth=rawElement.attributes.width|rawElement.style.width|rawElement.clientWidth,parentHeight=rawElement.attributes.height|rawElement.style.height|rawElement.clientHeight,width=resizeWidth?parentWidth-attrs.sentioResizeWidth:void 0,height=resizeHeight?parentHeight-attrs.sentioResizeHeight:void 0;body.style.overflow=overflow,$log.debug("resize rt.timeline height: "+height+" width: "+width),resizeWidth&&timeline.width(width),resizeHeight&&timeline.height(height),timeline.resize().redraw()},delayResize=function(){void 0!==resizeTimer&&$timeout.cancel(resizeTimer),resizeTimer=$timeout(doResize,200)};(resizeWidth||resizeHeight)&&(window.on("resize",delayResize),delayResize()),scope.$on("$destroy",function(){window.off("resize",delayResize)}),scope.$on("$destroy",function(){timeline.stop()})}}}]),angular.module("sentio").directive("sentioSankeyDiagram",["$document","$window","$timeout","$log",function($document,$window,$timeout,$log){"use strict";return{restrict:"A",scope:{model:"=sentioModel",resizeWidth:"@sentioResizeWidth",configureFn:"&sentioConfigureFn",direction:"=sentioDirection"},replace:!1,link:function(scope,element,attrs,controller){var sankeyElement=d3.select(element[0]),sankey=sentio.sankey.basic();sankey.init(sankeyElement),scope.$watch("direction",function(n,o){null==o&&null==n||(sankey.direction(n),delayResize(),sankey.redraw())}),scope.$watchCollection("model",function(n,o){null==o&&null==n||(sankey.model(n),sankey.redraw())}),scope.$watch("configureFn",function(n,o){null!=scope.configureFn&&scope.configureFn({sankey:sankey})});var resizeTimer,redrawTimer,resizeWidth=null!=attrs.sentioResizeWidth,window=angular.element($window),redraw=function(){null!=redrawTimer&&$timeout.cancel(redrawTimer),redrawTimer=$timeout(function(){sankey.redraw()},0)},doResize=function(){var body=$document[0].body,overflow=body.style.overflow;body.style.overflow="hidden";var rawElement=element[0],parentWidth=rawElement.attributes.width|rawElement.style.width|rawElement.clientWidth,width=resizeWidth?parentWidth-attrs.sentioResizeWidth:void 0;body.style.overflow=overflow,$log.debug("resize sankey width: "+width),resizeWidth&&sankey.width(width),sankey.resize(),redraw()},delayResize=function(){void 0!==resizeTimer&&$timeout.cancel(resizeTimer),resizeTimer=$timeout(doResize,200)};resizeWidth&&(window.on("resize",delayResize),delayResize()),scope.$on("$destroy",function(){window.off("resize",delayResize)})}}}]),angular.module("sentio").directive("sentioTimeline",["$document","$window","$timeout","$log",function($document,$window,$timeout,$log){"use strict";return{restrict:"A",scope:{model:"=sentioModel",markers:"=sentioMarkers",yExtent:"=sentioYExtent",xExtent:"=sentioXExtent",duration:"=sentioDuration",api:"=sentioApi",resizeWidth:"@sentioResizeWidth",resizeHeight:"@sentioResizeHeight",configureFn:"&sentioConfigureFn",filterFn:"&sentioFilterFn",filterState:"=sentioFilterState"},replace:!1,link:function(scope,element,attrs,controller){var timelineElement=d3.select(element[0]),timeline=sentio.timeline.line(),width=element[0].style.width;null!=width&&""!==width&&(width=parseFloat(width.substring(0,width.length-2)),null==width||isNaN(width)||timeline.width(width));var height=element[0].style.height;null!=height&&""!==height&&(height=parseFloat(height.substring(0,height.length-2)),null==height||isNaN(height)||timeline.height(height)),(null!=attrs.sentioFilterFn||attrs.sentioFilterState)&&timeline.filter(!0);var lastFilterState=null;scope.$watch("filterFn",function(n,o){timeline.filter().on("filterend",function(filterState){$timeout(function(){scope.filterFn({filterState:filterState}),scope.filterState=filterState,lastFilterState=filterState})})}),scope.$watch("filterState",function(n,o){if(null!=n&&n!==lastFilterState){if(n.length>2){if(n[0])return;n=n.slice(1,3)}timeline.setFilter(n)}}),timeline.init(timelineElement),scope.$watch("configureFn",function(n,o){null!=scope.configureFn&&scope.configureFn({timeline:timeline})}),scope.$watchCollection("model",function(n,o){null==o&&null==n||(timeline.data(n),redraw())}),scope.$watchCollection("markers",function(n,o){null==o&&null==n||(timeline.markers(n),redraw())}),scope.$watchCollection("yExtent",function(n,o){null==o&&null==n||(timeline.yExtent().overrideValue(n),redraw())}),scope.$watchCollection("xExtent",function(n,o){null==o&&null==n||(timeline.xExtent().overrideValue(n),redraw())}),scope.$watch("duration",function(n,o){null==o&&null==n||timeline.duration(n)},!0),scope.$watch("api",function(n,o){null!=scope.api&&(scope.api.start=timeline.start,scope.api.stop=timeline.stop,scope.api.restart=timeline.restart,scope.api.redraw=timeline.redraw,scope.api.resize=doResize)});var resizeTimer,redrawTimer,resizeWidth=null!=attrs.sentioResizeWidth,resizeHeight=null!=attrs.sentioResizeHeight,window=angular.element($window),redraw=function(){null!=redrawTimer&&$timeout.cancel(redrawTimer),redrawTimer=$timeout(function(){timeline.redraw()},0)},doResize=function(){var body=$document[0].body,overflow=body.style.overflow;body.style.overflow="hidden";var rawElement=element[0],parentWidth=rawElement.attributes.width|rawElement.style.width|rawElement.clientWidth,parentHeight=rawElement.attributes.height|rawElement.style.height|rawElement.clientHeight,width=resizeWidth?parentWidth-attrs.sentioResizeWidth:void 0,height=resizeHeight?parentHeight-attrs.sentioResizeHeight:void 0;body.style.overflow=overflow,$log.debug("resize rt.timeline height: "+height+" width: "+width),resizeWidth&&timeline.width(width),resizeHeight&&timeline.height(height),timeline.resize(),redraw()},delayResize=function(){void 0!==resizeTimer&&$timeout.cancel(resizeTimer),resizeTimer=$timeout(doResize,200)};(resizeWidth||resizeHeight)&&(window.on("resize",delayResize),delayResize()),scope.$on("$destroy",function(){window.off("resize",delayResize)})}}}]),angular.module("sentio").directive("sentioVerticalBarChart",["$document","$window","$timeout","$log",function($document,$window,$timeout,$log){"use strict";return{restrict:"A",scope:{model:"=sentioModel",widthExtent:"=sentioWidthExtent",duration:"=sentioDuration",api:"=sentioApi",resizeWidth:"@sentioResizeWidth",configureFn:"&sentioConfigureFn"},replace:!1,link:function(scope,element,attrs,controller){var chartElement=d3.select(element[0]),chart=sentio.chart.verticalBars(),width=element[0].style.width;null!=width&&""!==width&&(width=parseFloat(width.substring(0,width.length-2)),null==width||isNaN(width)||chart.width(width)),chart.init(chartElement),scope.$watch("configureFn",function(n,o){null!=scope.configureFn&&scope.configureFn({chart:chart})}),scope.$watchCollection("model",function(n,o){null==o&&null==n||(chart.data(n),redraw())}),scope.$watchCollection("widthExtent",function(n,o){null==o&&null==n||(chart.widthExtent().overrideValue(n),redraw())}),scope.$watch("duration",function(n,o){null==o&&null==n||chart.duration(n)},!0),scope.$watch("api",function(n,o){null!=scope.api&&(scope.api.value=chart.value,scope.api.label=chart.label,scope.api.key=chart.key,scope.api.dispatch=chart.dispatch,scope.api.redraw=chart.redraw,scope.api.resize=doResize)});var resizeTimer,redrawTimer,resizeWidth=null!=attrs.sentioResizeWidth,window=angular.element($window),redraw=function(){null!=redrawTimer&&$timeout.cancel(redrawTimer),redrawTimer=$timeout(function(){chart.redraw()},0)},doResize=function(){var body=$document[0].body,overflow=body.style.overflow;body.style.overflow="hidden";var rawElement=element[0],parentWidth=rawElement.attributes.width|rawElement.style.width|rawElement.clientWidth,width=resizeWidth?parentWidth-attrs.sentioResizeWidth:void 0;body.style.overflow=overflow,$log.debug("resize verticalBars.chart width: "+width),resizeWidth&&chart.width(width),chart.resize(),redraw()},delayResize=function(){void 0!==resizeTimer&&$timeout.cancel(resizeTimer),resizeTimer=$timeout(doResize,200)};resizeWidth&&(window.on("resize",delayResize),delayResize()),scope.$on("$destroy",function(){window.off("resize",delayResize)})}}}]);